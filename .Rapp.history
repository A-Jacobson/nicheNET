cell<-cellFromXY(object=Stack,xy=background[i,])# get the cell number
cell
xmin=background$x[i] - buf#
				xmax<-background$x[i] + buf#
				ymin<-background$y[i] - buf #
				ymax<-background$y[i] + buf#
				ev<-c(xmin, xmax, ymin, ymax)#
				e<- extent(ev)#
				punch <- crop(Stack, e)#
				dir.create(noquote(paste0("false/",cell)))#
				writeRaster(punch, filename=paste0("false/",cell,"/",cell,".asc"), bylayer=T)#
				print(noquote(paste0(cell,".asc")))
xmin=background$x[i] - buf
x[i]
background$x[i]
background
ev<-c(xmin, xmax, ymin,
buf
background$y[i] + buf
typeof(background[i])
xmin= as.integer(background$x[i]) - buf
xmin<-as.numeric(background$x[i]) - buf
as.numeric(background[i])
as.numeric(background[i]) *5
as.numeric(background[i,]) *5
as.numeric(background$x[i]) *5
as.vector(background$x[i]) *5
typeof(background$x[i])
background$x[i]
background$x
background
colnames(background) <- c("x", "y")
background$x
background
as.dataframe(background)
background[1,1]
background[1,2]
background
background[1,1]
background[2,1]
background[2,2]
xmin<-background[i,1] - buf
background <- sampleRandom(rasterbis, 10, cells=T, xy = TRUE, sp=F, na.rm = TRUE)#
head(background)#
background[,2:3] -> background#
colnames(background) <- c("x", "y")#
unique(background) -> background#
nbackground<- nrow(background)#
nbackground#
#
dir.create("false")#
for (i in 1:nbackground) {#
	cell<-cellFromXY(object=Stack,xy=background[i,])# get the cell number#
		if (cell %in% truecells){#
			print(paste0(cell," is present in true dataset"))#
			} else {#
	xmin<-background[i,1] - buf#
	xmax<-background[i,1] + buf#
	ymin<-background[i,2] - buf #
	ymax<-background[i,2] + buf#
	ev<-c(xmin, xmax, ymin, ymax)#
	e<- extent(ev)#
	punch <- crop(Stack, e)#
	dir.create(noquote(paste0("false/",cell)))#
	writeRaster(punch, filename=paste0("false/",cell,"/",cell,".asc"), bylayer=T)#
	print(noquote(paste0(cell,".asc")))#
}}
npoints
background <- sampleRandom(rasterbis, 279, cells=T, xy = TRUE, sp=F, na.rm = TRUE)  #set number of reps#
head(background)#
background[,2:3] -> background#
colnames(background) <- c("x", "y")#
unique(background) -> background#
nbackground<- nrow(background)#
nbackground#
#
dir.create("false")#
for (i in 1:nbackground) {#
	cell<-cellFromXY(object=Stack,xy=background[i,])# get the cell number#
		if (cell %in% truecells){#
			print(paste0(cell," is present in true dataset"))#
			} else {#
	xmin<-background[i,1] - buf#
	xmax<-background[i,1] + buf#
	ymin<-background[i,2] - buf #
	ymax<-background[i,2] + buf#
	ev<-c(xmin, xmax, ymin, ymax)#
	e<- extent(ev)#
	punch <- crop(Stack, e)#
	dir.create(noquote(paste0("false/",cell)))#
	writeRaster(punch, filename=paste0("false/",cell,"/",cell,".asc"), bylayer=T)#
	print(noquote(paste0(cell,".asc")))#
}}
plot(punch)
setwd('~/Desktop/dadNet')
setwd('~/Desktop/dadNet')#
library(raster)#
library(spatial.tools)#
library(rgdal)#
list <- list.files(path="~/Desktop/dadNet/tetra_layers", pattern="*.asc")#
nlist <- length(list)#
list#
nlist#
Stack <- stack(list)#
res <- res(Stack)#
buf<- unlist(res[1]*5)  #change the 5 to whatever radius you want for punches#
Stack
setwd('~/Desktop/dadNet')
library(raster)
library(spatial.tools)
library(spatialtools)
library(spatial.tools)
library(rgdal)
list <- list.files(path="~/Desktop/dadNet/tetra_layers", pattern="*.asc")
nlist <- length(list)
list
nlist
Stack <- stack(list)
nlist
list <- list.files(path="/tetra_layers", pattern="*.asc")
list
Stack <- stack(path="~/Desktop/dadNet/tetra_layers", list)
setwd("~/Desktop/dadNet/tetra_layers")
Stack <- stack(list)
library(raster)
Stack <- stack(list)
setwd('~/Desktop/dadNet')
Stack <- stack(list)
res <- res(Stack)
stack(list)
list
list <- list.files(path="~/Desktop/dadNet/tetra_layers", pattern="*.asc")
list
Stack <- stack(list)
res <- res(Stack)
Stack <- stack(list)
setwd("~/Desktop/dadNet/tetra_layers")
Stack <- stack(list)
res <- res(Stack)
buf<- unlist(res[1]*5)  #change the 5 to whatever radius you want for punches
Stack
setwd("~/Desktop/dadNet")
rasterbis <- raster("~/Desktop/dadNet/tetra_layers/bio11.asc")
rasterbis[]<-NA # empty one of the rasters
read.csv("TolmieaLocs.csv")->points
points[,2:3] -> points
colnames(points) <- c("x", "y")
unique(points) -> points
npoints<- nrow(points)
head(points)
plot(Stack)
npoints
cell<-cellFromXY(object=Stack,xy=points[1,])# get the cell number
xmin=points$x[1] - buf
xmax<-points$x[1] + buf
ymin<-points$y[1] - buf
ymax<-points$y[1] + buf
ev<-c(xmin, xmax, ymin, ymax)
e<- extent(ev)
punch <- crop(Stack, e)
plot(punch)
punch
brickstack_to_saved_rasters(punch, test)
writeRaster(punch, filename="test.asc", bylayer=T)
dir.create("true")
truecells <- c()
background <- sampleRandom(rasterbis, 279, cells=T, xy = TRUE, sp=F, na.rm = TRUE)  #set number of reps
head(background)
background[,2:3] -> background
colnames(background) <- c("x", "y")
unique(background) -> background
nbackground<- nrow(background)
nbackground
background <- sampleRandom(rasterbis, 279, cells=T, xy = TRUE, sp=F, na.rm = TRUE)  #set number of reps
head(background)
background[,2:3] -> background
colnames(background) <- c("x", "y")
unique(background) -> background
nbackground<- nrow(background)
nbackground
head(background)
background <- sampleRandom(rasterbis, 279, cells=T, xy = TRUE, sp=F, na.rm = TRUE)  #set number of reps
head(background)
rasterbis <- raster("~/Desktop/dadNet/tetra_layers/bio11.asc")
background <- sampleRandom(rasterbis, 279, cells=T, xy = TRUE, sp=F, na.rm = TRUE)  #set number of reps
head(background)
#raster for sampling
rasterbis <- raster("~/Desktop/dadNet/tetra_layers/bio11.asc")
background <- sampleRandom(rasterbis, 279, cells=T, xy = TRUE, sp=F, na.rm = TRUE)  #set number of reps
head(background)
background[,2:3] -> background
colnames(background) <- c("x", "y")
unique(background) -> background
nbackground<- nrow(background)
nbackground
background <- sampleRandom(rasterbis, 10, cells=T, xy = TRUE, sp=F, na.rm = TRUE)  #set number of reps
head(background)
background <- sampleRandom(rasterbis, 10, cells=T, xy = TRUE, sp=F, na.rm = TRUE)  #set number of reps#
head(background)#
background[,2:3] -> background#
colnames(background) <- c("x", "y")#
unique(background) -> background#
nbackground<- nrow(background)#
nbackground#
#
dir.create("false")#
for (i in 1:nbackground) {#
	cell<-cellFromXY(object=Stack,xy=background[i,])# get the cell number#
		if (cell %in% truecells){#
			print(paste0(cell," is present in true dataset"))#
			} else {#
	xmin<-background[i,1] - buf#
	xmax<-background[i,1] + buf#
	ymin<-background[i,2] - buf #
	ymax<-background[i,2] + buf#
	ev<-c(xmin, xmax, ymin, ymax)#
	e<- extent(ev)#
	punch <- crop(Stack, e)#
	punch#
	dir.create(noquote(paste0("false/",cell)))#
	writeRaster(punch, filename=paste0("false/",cell,"/",cell,".asc"), bylayer=T)#
	print(noquote(paste0(cell,".asc")))#
}}
for (i in 1:nbackground) {#
	cell<-cellFromXY(object=Stack,xy=background[i,])# get the cell number#
		if (cell %in% truecells){#
			print(paste0(cell," is present in true dataset"))#
			} else {#
	xmin<-background[i,1] - buf#
	xmax<-background[i,1] + buf#
	ymin<-background[i,2] - buf #
	ymax<-background[i,2] + buf#
	ev<-c(xmin, xmax, ymin, ymax)#
	e<- extent(ev)#
	punch <- crop(Stack, e)#
	print(punch)#
	dir.create(noquote(paste0("false/",cell)))#
	writeRaster(punch, filename=paste0("false/",cell,"/",cell,".asc"), bylayer=T)#
	print(noquote(paste0(cell,".asc")))#
}}
writeRaster(punch, filename=paste0("false/",cell,"/",cell,".asc"), bylayer=T, overwrite=T)
dir.create("false")#
for (i in 1:nbackground) {#
	cell<-cellFromXY(object=Stack,xy=background[i,])# get the cell number#
		if (cell %in% truecells){#
			print(paste0(cell," is present in true dataset"))#
			} else {#
	xmin<-background[i,1] - buf#
	xmax<-background[i,1] + buf#
	ymin<-background[i,2] - buf #
	ymax<-background[i,2] + buf#
	ev<-c(xmin, xmax, ymin, ymax)#
	e<- extent(ev)#
	punch <- crop(Stack, e)#
	print(punch)#
	dir.create(noquote(paste0("false/",cell)))#
	writeRaster(punch, filename=paste0("false/",cell,"/",cell,".asc"), bylayer=T, overwrite=T)#
	print(noquote(paste0(cell,".asc")))#
}}
background[i,]
background[i,1
]
as.interger(background[i,1])
as.numeric(background[i,1])
background[i,1]
background[i,2]
-background[i,1]
as.numeric(background[i,1])
background[i,]
cell<-cellFromXY(object=Stack,xy=background[2,])# get the cell number
background[2,]
background[2,1]
background[1,]
background[1,1]
background[1,2]
background[10,]
background[10,1]
background[10,2]
i
cell
background <- sampleRandom(Stack, 10, cells=T, xy = TRUE, sp=F, na.rm = TRUE)  #set number of reps
head(background)#
background[,2:3] -> background#
colnames(background) <- c("x", "y")#
unique(background) -> background#
nbackground<- nrow(background)#
nbackground#
#
dir.create("false")#
for (i in 1:nbackground) {#
	cell<-cellFromXY(object=Stack,xy=background[i,])# get the cell number#
		if (cell %in% truecells){#
			print(paste0(cell," is present in true dataset"))#
			} else {#
	xmin<-background[i,1] - buf#
	xmax<-background[i,1] + buf#
	ymin<-background[i,2] - buf #
	ymax<-background[i,2] + buf#
	ev<-c(xmin, xmax, ymin, ymax)#
	e<- extent(ev)#
	punch <- crop(Stack, e)#
	print(punch)#
	dir.create(noquote(paste0("false/",cell)))#
	writeRaster(punch, filename=paste0("false/",cell,"/",cell,".asc"), bylayer=T, overwrite=T)#
	print(noquote(paste0(cell,".asc")))#
}}
background <- sampleRandom(rasterbis, 10, cells=F, xy = TRUE, sp=F, na.rm = TRUE)  #set number of reps#
head(background)#
background[,2:3] -> background#
colnames(background) <- c("x", "y")#
unique(background) -> background#
nbackground<- nrow(background)#
nbackground#
#
dir.create("false")#
for (i in 1:nbackground) {#
	cell<-cellFromXY(object=Stack,xy=background[i,])# get the cell number#
		if (cell %in% truecells){#
			print(paste0(cell," is present in true dataset"))#
			} else {#
	xmin<-background[i,1] - buf#
	xmax<-background[i,1] + buf#
	ymin<-background[i,2] - buf #
	ymax<-background[i,2] + buf#
	ev<-c(xmin, xmax, ymin, ymax)#
	e<- extent(ev)#
	punch <- crop(Stack, e)#
	print(punch)#
	dir.create(noquote(paste0("false/",cell)))#
	writeRaster(punch, filename=paste0("false/",cell,"/",cell,".asc"), bylayer=T, overwrite=T)#
	print(noquote(paste0(cell,".asc")))#
}}
background <- sampleRandom(rasterbis, 10, cells=F, xy = TRUE, sp=F, na.rm = TRUE)  #set number of reps
head(background)
background <- sampleRandom(rasterbis, 10, cells=F, xy = TRUE, sp=F, na.rm = TRUE)  #set number of reps#
head(background)#
background[,1:2] -> background#
colnames(background) <- c("x", "y")#
unique(background) -> background#
nbackground<- nrow(background)#
nbackground#
#
dir.create("false")#
for (i in 1:nbackground) {#
	cell<-cellFromXY(object=Stack,xy=background[i,])# get the cell number#
		if (cell %in% truecells){#
			print(paste0(cell," is present in true dataset"))#
			} else {#
	xmin<-background[i,1] - buf#
	xmax<-background[i,1] + buf#
	ymin<-background[i,2] - buf #
	ymax<-background[i,2] + buf#
	ev<-c(xmin, xmax, ymin, ymax)#
	e<- extent(ev)#
	punch <- crop(Stack, e)#
	print(punch)#
	dir.create(noquote(paste0("false/",cell)))#
	writeRaster(punch, filename=paste0("false/",cell,"/",cell,".asc"), bylayer=T, overwrite=T)#
	print(noquote(paste0(cell,".asc")))#
}}
plot(rasterbis)
points(background)
background <- sampleRandom(rasterbis, 10, cells=F, xy = TRUE, sp=F, na.rm = TRUE, ext)  #set number of reps
background <- sampleRandom(rasterbis, 10, cells=F, xy = TRUE)  #set number of reps#
head(background)
background[,1:2] -> background#
colnames(background) <- c("x", "y")#
unique(background) -> background#
nbackground<- nrow(background)#
nbackground#
plot(rasterbis)#
points(background)#
dir.create("false")#
for (i in 1:nbackground) {#
	cell<-cellFromXY(object=Stack,xy=background[i,])# get the cell number#
		if (cell %in% truecells){#
			print(paste0(cell," is present in true dataset"))#
			} else {#
	xmin<-background[i,1] - buf#
	xmax<-background[i,1] + buf#
	ymin<-background[i,2] - buf #
	ymax<-background[i,2] + buf#
	ev<-c(xmin, xmax, ymin, ymax)#
	e<- extent(ev)#
	punch <- crop(Stack, e)#
	print(punch)#
	dir.create(noquote(paste0("false/",cell)))#
	writeRaster(punch, filename=paste0("false/",cell,"/",cell,".asc"), bylayer=T, overwrite=T)#
	print(noquote(paste0(cell,".asc")))#
}}
for (i in 1:npoints){#
	cell<-cellFromXY(object=Stack,xy=points[i,])# get the cell number#
	xmin=points$x[i] - buf#
	xmax<-points$x[i] + buf#
	ymin<-points$y[i] - buf #
	ymax<-points$y[i] + buf#
	ev<-c(xmin, xmax, ymin, ymax)#
	e<- extent(ev)#
	punch <- crop(Stack, e)#
	dir.create(noquote(paste0("true/",cell)))#
	writeRaster(punch, filename=paste0("true/",cell,"/",cell,".asc"), bylayer=T)#
	print(punch)#
	print(noquote(paste0(cell,".asc")))#
	truecells <- c(truecells,cell)#
}
background <- sampleRandom(rasterbis, 10, cells=F, xy = TRUE, sp=F, na.rm = TRUE)  #set number of reps
background$x
colnames(background) <- c("x", "y")
background[,1:2] -> background
background$x
colnames(background) <- c("x", "y")
background$x
background
points
typeof(points)
typeof(background)
as.list(background)
background <- sampleRandom(rasterbis, 10, cells=F, xy = TRUE, sp=F, na.rm = TRUE)  #set number of reps
typeof(background)
coordinates(rasterbis)
typeof(coordinates(rasterbis))
as.list(coordinates(rasterbis))
test<-as.list(coordinates(rasterbis))
test[1]
test[1,]
help(extent)
background[i,1] + buf
background[i,1] - buf
background[i,2] - buf
background[i,2] + buf
ev
e
punch
punch <- crop(Stack, e)
punch
print(punch)
for (i in 1:nbackground) {#
	cell<-cellFromXY(object=Stack,xy=background[i,])# get the cell number#
		if (cell %in% truecells){#
			print(paste0(cell," is present in true dataset"))#
			} else {#
	xmin<-background[i,1] - buf#
	xmax<-background[i,1] + buf#
	ymin<-background[i,2] - buf #
	ymax<-background[i,2] + buf#
	ev<-c(xmin, xmax, ymin, ymax)#
	e<- extent(ev)#
	punch <- crop(Stack, e)#
	print(punch)#
	dir.create(noquote(paste0("false/",cell)))#
	writeRaster(punch, filename=paste0("false/",cell,"/",cell,".asc"), bylayer=T, overwrite=T)#
	print(noquote(paste0(cell,".asc")))#
}}
xmin<-background[i,1] - buf#
	xmax<-background[i,1] + buf#
	ymin<-background[i,2] - buf #
	ymax<-background[i,2] + buf#
	ev<-c(xmin, xmax, ymin, ymax)#
	e<- extent(ev)#
	punch <- crop(Stack, e)#
	print(punch)
background <- sampleRandom(rasterbis, 10, cells=F, xy = TRUE, sp=F, na.rm = TRUE)  #set number of reps
typeof(background)
head(background)
c(background[,1],background[,2])
cbind(background[,1],background[,2])
background<- cbind(background[,1],background[,2])
colnames(background) <- c("x", "y")
unique(background) -> background
nbackground<- nrow(background)
nbackground
plot(rasterbis)
points(background)
background#
dir.create("false")#
for (i in 1:nbackground) {#
	cell<-cellFromXY(object=Stack,xy=background[i,])# get the cell number#
		if (cell %in% truecells){#
			print(paste0(cell," is present in true dataset"))#
			} else {#
	xmin<-background[i,1] - buf#
	xmax<-background[i,1] + buf#
	ymin<-background[i,2] - buf #
	ymax<-background[i,2] + buf#
	ev<-c(xmin, xmax, ymin, ymax)#
	e<- extent(ev)#
	punch <- crop(Stack, e)#
	print(punch)#
	dir.create(noquote(paste0("false/",cell)))#
	writeRaster(punch, filename=paste0("false/",cell,"/",cell,".asc"), bylayer=T, overwrite=T)#
	print(noquote(paste0(cell,".asc")))#
}}
buf
background$x
background <- sampleRandom(rasterbis, 10, cells=F, xy = TRUE, sp=F, na.rm = TRUE)  #set number of reps
typeof(background)
background<- cbind(background[,1],background[,2])
head(background)
typeof(background)
background <- sampleRandom(rasterbis, 10, cells=F, xy = TRUE, sp=F, na.rm = TRUE)  #set number of reps
typeof(background)
head(background)
back <- cbind(background[,1],background[,2])
head(back)
typeof(back)
as.list(back)
as.datamatrix(back)
as.data.matrix(back)
as.dataframe(back)
as.data.frame(back)
background<- as.data.frame(back)
colnames(background) <- c("x", "y")
background$x
for (i in 1:nbackground) {#
	cell<-cellFromXY(object=Stack,xy=background[i,])# get the cell number#
		if (cell %in% truecells){#
			print(paste0(cell," is present in true dataset"))#
			} else {#
	xmin<-background$x[i] - buf#
	xmax<-background$x[i] + buf#
	ymin<-background$y[i] - buf #
	ymax<-background$y[i] + buf#
	ev<-c(xmin, xmax, ymin, ymax)#
	e<- extent(ev)#
	punch <- crop(Stack, e)#
	print(punch)#
	dir.create(noquote(paste0("false/",cell)))#
	writeRaster(punch, filename=paste0("false/",cell,"/",cell,".asc"), bylayer=T, overwrite=T)#
	print(noquote(paste0(cell,".asc")))#
}}
setwd('~/Desktop/dadNet')#
library(raster)#
library(spatial.tools)#
library(rgdal)#
#
read.csv("TolmieaLocs.csv")->points #
points[,2:3] -> points#
colnames(points) <- c("x", "y")#
unique(points) -> points#
npoints<- nrow(points)#
head(points)#
plot(Stack)#
npoints#
#
list <- list.files(path="~/Desktop/dadNet/tetra_layers", pattern="*.asc")#
nlist <- length(list)#
list#
nlist
list <- list.files(path="~/Desktop/dadNet/tetra_layers", pattern="*.asc")#
nlist <- length(list)#
list#
nlist
setwd("./tetra_layers")#
Stack <- stack(list)#
res <- res(Stack)#
ras<- raster(list[1])#
buf<- unlist(res[1]*5)  #change the 5 to whatever radius you want for punches#
Stack#
setwd("../")
#make buffer size using matrix then make center point 0 # represents the center cell you are inputing#
buffer <- matrix(1, 11, 11)#
buffer[6,6] <- 0#
buffer
dir.create("true")#
truecells <- c()#
for (i in 1:npoints){#
	cell<-cellFromXY(object=Stack,xy=points[i,])# get the cell number#
	cells <- adjacent(Stack,cell,directions=buffer,pairs=T,include=T)#
	r <- rasterFromCells(Stack, cells, values=T)#
	punch <- crop(Stack, r)#
	dir.create(noquote(paste0("true/",cell)))#
	writeRaster(punch, filename=paste0("true/",cell,"/",cell,".asc"), bylayer=T)#
	print(noquote(paste0(cell,".asc")))#
	truecells <- c(truecells,cell)#
}#
background <- sampleRandom(ras, 279, cells=T, xy = TRUE, sp=F, na.rm = TRUE)  #set number of reps#
background[,1] -> background#
background<- data.frame(background)#
unique(background) -> background#
nbackground<- nrow(background)#
nbackground#
dir.create("false")#
for (i in 1:nbackground) {#
	cell <- background[i,1]#
			#if (cell %in% truecells){#
			#print(paste0(cell," is present in true dataset"))#
			#} else {#
	cells <- adjacent(Stack,cell,directions=buffer,pairs=T,include=T)#
	cells#
	r <- rasterFromCells(Stack, cells, values=T)#
	punch <- crop(Stack, r)#
	print(punch)#
	dir.create(noquote(paste0("false/",cell)))#
	writeRaster(punch, filename=paste0("false/",cell,"/",cell,".asc"), bylayer=T)#
	print(noquote(paste0(cell,".asc")))#
}}
#iterate through background points, first checking that they were not already included in the true list#
for (i in 1:nbackground) {#
	cell <- background[i,1]#
			if (cell %in% truecells){#
			print(paste0(cell," is present in true dataset"))#
			} else {#
	cells <- adjacent(Stack,cell,directions=buffer,pairs=T,include=T)#
	cells#
	r <- rasterFromCells(Stack, cells, values=T)#
	punch <- crop(Stack, r)#
	print(punch)#
	dir.create(noquote(paste0("false/",cell)))#
	writeRaster(punch, filename=paste0("false/",cell,"/",cell,".asc"), bylayer=T)#
	print(noquote(paste0(cell,".asc")))#
}
}
read.csv("./data/TolmieaLocs.csv")->points
setwd('~/Desktop/nicheNet')
read.csv("./data/TolmieaLocs.csv")->points
write.csv(background,"background_sampling.csv")
write.csv(background,"./data/test_Set/background_sampling.csv")
background <- sampleRandom(ras, 279, cells=T, xy = TRUE, sp=F, na.rm = TRUE)  #set number of reps
write.csv(background,"./data/test_Set/background_sampling.csv")
write.csv(background[,1:3],"./data/test_Set/background_sampling.csv")
dir.create("./data/test_Set/true")
